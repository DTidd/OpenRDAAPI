/* PAYROLL's - Make (COMBDED) Report */
#include <cstdio>
#include <rptgen.hpp>
/*COMPMEM 40960 */

extern void free_pvals(RDApval *,int);
extern char *module;
static void COMBDED_RANGE_SCREEN(void);
void COMBDED(void);

void COMBDED()
{
	int x;
	RDAreport *tmp=NULL;
	RDAsearch *s=NULL;
	RDApval *pval=NULL,*pvals=NULL;
/*
	int y,z;
	short longest=132;
	int numpvars=0;
	DFvirtual *d=NULL;
	RDAacct *acc=NULL;
	RDAaccpart *part=NULL;
*/
	char *t=NULL,*desc=NULL,*rptname=NULL;
	RDApvar *pvars=NULL;




/*======================================================================
Creating RDAreport Structure
RDAreport *xRDAreportNEW(char *name,char *title,char *desc,short engine,
	char *server_name,short process_exceptions,short use_print_screen,
	short stop_on_error,short ask_b4exe,short chain_report,
	char *chain_module,char *chain_name,short range_screen,
	short diag_level,short removesort,int line,
	char *file)

diag_level Values:
	0=Diagnostic Not-Breakable
	1=Diagnostic Breakable
	2=No Diagnostic
----------------------------------------------------------------------*/

	memset(stemp,0,101);
	rptname=Rmalloc(7+1);
	sprintf(rptname,"COMBDED");
	t=Rmalloc(57+1);
	sprintf(t,"Combines Deduction of a like type into a single deduction");
	desc=Rmalloc(209+1);
	sprintf(desc,"This output definition is used to combine deduction's of like deduction type to take advantage of Xpert's Deduction Computation ability as opposed to managing multiple deductions to accomplish the same result.");
	tmp=RDAreportNEWADV(rptname,t,desc,1,"",FALSE,FALSE,FALSE,FALSE,FALSE,"","",TRUE,0,TRUE,"");
	if(t!=NULL) Rfree(t);
	if(desc!=NULL) Rfree(desc);




/*========================================================================
Creating RDAdisplay Structure
void xadddisplay(RDAreport *report,double page_width,double page_length,
	short device_type,short alignment,short testpages,char *devicename,
	short bodycount,short starting_page_no,
	int numpvars,RDApvar *pvars,int line,char *file)

Device Type(s) - Valid Device Types
	0 - PRINTER
	1 - ASCII FILE
	2 - APPEND ASCII FILE
	3 - DATAFILE
	4 - UPDATE DATAFILE
------------------------------------------------------------------------*/

	pvars=NULL;
	adddisplayADV(tmp,(double)8.500000,(double)11.000000,4,FALSE,0,"",0,1,0,pvars);

/*----------------------------------------------------------------------*/




	tmp->select=NULL;




/*========================================================================
Creating RDAsearch Structures

int xaddsearchline(RDAreport *report,char *mod,char *file,
	int connect_type,char *connect_mod,char *connect_file,
	short num_confld,RDAconfld *confld,
	char *subkeyname,short range,char *expression,short numwrites,
	int line,char *filex)
#define addsearchfile(report,mod,file,connect_type,connect_mod,connect_file,keyname,range?,expression,number_reads/writes)
#define addsearchfile(a,b,c,d,e,f,g,h,i,j)   xaddsearchline(a,b,c,d,e,f,0,NULL,g,h,i,j,__LINE__,__FILE__)

int xaddsearchconfld(RDAsearch *s,char *fldname,char *conname,int line,
	char *file)
#define addsearchconfld(a,b,c) xaddsearchconfld(a,b,c,__LINE__,__FILE__)
------------------------------------------------------------------------*/

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYDTRN][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDTRN",0,NULL,NULL,"PAYDTRN KEY #4",FALSE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","");
		addsearchconfld(s,"JOB NUMBER","");
		addsearchconfld(s,"PAY IDENTIFICATION","");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","");
		addsearchconfld(s,"ACCOUNT NUMBER","");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(98+1);
	sprintf(t,"([PAYROLL][PAYDDMS][DEDUCTION TYPE]=[COMBINATION TYPE]) AND ([PAYROLL][PAYDDMS][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDDMS",1,"PAYROLL","PAYDTRN","PAYDDMS KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYDTRN][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYDEDM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDEDM",1,"PAYROLL","PAYDTRN","PAYDEDM KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","[PAYDTRN][PERSONNEL IDENTIFICATION]");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYDTRN][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYJDCM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYJDCM",0,NULL,NULL,"PAYJDCM KEY",FALSE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","");
		addsearchconfld(s,"JOB NUMBER","");
		addsearchconfld(s,"CALENDAR YEAR","");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(98+1);
	sprintf(t,"([PAYROLL][PAYDDMS][DEDUCTION TYPE]=[COMBINATION TYPE]) AND ([PAYROLL][PAYDDMS][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDDMS",1,"PAYROLL","PAYJDCM","PAYDDMS KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYJDCM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYDEDM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDEDM",2,"PAYROLL","PAYJDCM","PAYDEDM KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","[PAYJDCM][PERSONNEL IDENTIFICATION]");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYJDCM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYJDFM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYJDFM",0,NULL,NULL,"PAYJDFM KEY",FALSE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","");
		addsearchconfld(s,"JOB NUMBER","");
		addsearchconfld(s,"FISCAL YEAR","");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(98+1);
	sprintf(t,"([PAYROLL][PAYDDMS][DEDUCTION TYPE]=[COMBINATION TYPE]) AND ([PAYROLL][PAYDDMS][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDDMS",2,"PAYROLL","PAYJDFM","PAYDDMS KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYJDFM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYDEDM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDEDM",1,"PAYROLL","PAYJDFM","PAYDEDM KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","[PAYJDFM][PERSONNEL IDENTIFICATION]");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYJDFM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYJDPM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYJDPM",0,NULL,NULL,"RDA PAYJDPM KEY",FALSE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","");
		addsearchconfld(s,"JOB NUMBER","");
		addsearchconfld(s,"PAY IDENTIFICATION","");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(98+1);
	sprintf(t,"([PAYROLL][PAYDDMS][DEDUCTION TYPE]=[COMBINATION TYPE]) AND ([PAYROLL][PAYDDMS][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDDMS",1,"PAYROLL","PAYJDPM","PAYDDMS KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYJDPM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYDEDM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDEDM",1,"PAYROLL","PAYJDPM","PAYDEDM KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","[PAYJDPM][PERSONNEL IDENTIFICATION]");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYJDPM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYJDAC][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYJDAC",0,NULL,NULL,"RDA PAYJDAC KEY",FALSE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","");
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","");
		addsearchconfld(s,"JOB NUMBER","");
		addsearchconfld(s,"ACCOUNT NUMBER","");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(98+1);
	sprintf(t,"([PAYROLL][PAYDDMS][DEDUCTION TYPE]=[COMBINATION TYPE]) AND ([PAYROLL][PAYDDMS][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDDMS",1,"PAYROLL","PAYJDAC","PAYDDMS KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYJDAC][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYDEDM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDEDM",1,"PAYROLL","PAYJDAC","PAYDEDM KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","[PAYJDAC][PERSONNEL IDENTIFICATION]");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYJDAC][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYDPMS][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDPMS",0,NULL,NULL,"PAYDPMS KEY",FALSE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","");
		addsearchconfld(s,"PAY IDENTIFICATION","");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(98+1);
	sprintf(t,"([PAYROLL][PAYDDMS][DEDUCTION TYPE]=[COMBINATION TYPE]) AND ([PAYROLL][PAYDDMS][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDDMS",1,"PAYROLL","PAYDPMS","PAYDDMS KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYDPMS][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYDEDM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDEDM",1,"PAYROLL","PAYDPMS","PAYDEDM KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","[PAYDPMS][PERSONNEL IDENTIFICATION]");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYDPMS][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYDCSM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDCSM",0,NULL,NULL,"PAYDCSM KEY",FALSE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","");
		addsearchconfld(s,"CALENDAR YEAR","");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(98+1);
	sprintf(t,"([PAYROLL][PAYDDMS][DEDUCTION TYPE]=[COMBINATION TYPE]) AND ([PAYROLL][PAYDDMS][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDDMS",1,"PAYROLL","PAYDCSM","PAYDDMS KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYDCSM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYDEDM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDEDM",1,"PAYROLL","PAYDCSM","PAYDEDM KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","[PAYDCSM][PERSONNEL IDENTIFICATION]");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYDCSM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYDFSM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDFSM",0,NULL,NULL,"PAYDFSM KEY",FALSE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","");
		addsearchconfld(s,"FISCAL YEAR","");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(98+1);
	sprintf(t,"([PAYROLL][PAYDDMS][DEDUCTION TYPE]=[COMBINATION TYPE]) AND ([PAYROLL][PAYDDMS][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDDMS",1,"PAYROLL","PAYDFSM","PAYDDMS KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYDFSM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);

	x=addsearchfileADV(tmp,"PAYROLL","PAYDEDM",1,"PAYROLL","PAYDFSM","PAYDEDM KEY",TRUE,NULL,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","[PAYDFSM][PERSONNEL IDENTIFICATION]");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYDFSM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}

	t=Rmalloc(38+1);
	sprintf(t,"([PAYROLL][PAYDEDM][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDEDM",0,NULL,NULL,"PAYDEDM KEY",FALSE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"PERSONNEL IDENTIFICATION","");
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","");
	}
	if(t!=NULL) Rfree(t);

	t=Rmalloc(98+1);
	sprintf(t,"([PAYROLL][PAYDDMS][DEDUCTION TYPE]=[COMBINATION TYPE]) AND ([PAYROLL][PAYDDMS][DELETEFLAG]=FALSE)");
	x=addsearchfileADV(tmp,"PAYROLL","PAYDDMS",1,"PAYROLL","PAYDEDM","PAYDDMS KEY",TRUE,t,NULL,1);
	if(x!=(-1))
	{
		s=tmp->search+(x-1);
		addsearchconfld(s,"DEDUCTION DESCRIPTION IDENTIFICATION","[PAYDEDM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	}
	if(t!=NULL) Rfree(t);





/*========================================================================
Creating RDAvirtual Structures
int xaddvirtualline(RDAreport *r,char *name,int type,short len,
	char *expression,short when,short range,int line,char *file)
FIELD TYPES: rdafld.h 
	#define VARIABLETEXT            0
	#define PLAINTEXT               1
	#define DOLLARS                 2
	#define PHONE                   3
	#define CUSTOMTYPE              4
	#define ZIPCODE                 5
	#define DECIMALV                6
	#define SHORTV                  7
	#define LONGV                   8
	#define DOUBLEV                 9
	#define BOOLNS                  10
	#define CHARACTERS              11
	#define BUTTONS                 12
	#define SCROLLEDLIST            13
	#define SCROLLEDTEXT            14
	#define SOCSECNUM               15
	#define DATES                   16
	#define TIMES                   17
	#define SSHORTV                 18
	#define SLONGV                  19
	#define SDECIMALV               20
	#define SDOUBLEV                21
	#define EXPENDITURE             22
	#define REVENUE                 23
	#define BALANCESHEET            24
	#define BEGINNINGBALANCE        25
	#define OPTIONALFIELDS          26
	#define DOLLARS_NOCENTS         27
------------------------------------------------------------------------*/

	if(t!=NULL) Rfree(t);
	addvirtuallineADV(tmp,"COMBINATION IDENTIFICATION",1,15,t,1,2);

	if(t!=NULL) Rfree(t);
	addvirtuallineADV(tmp,"COMBINATION TYPE",1,15,t,0,2);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(21+1);
	sprintf(t,"[PRIMARY FILE NUMBER]");
	addvirtuallineADV(tmp,"WHICH",7,2,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(799+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][PERSONNEL IDENTIFICATION] ELSE\nIF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][PERSONNEL IDENTIFICATION] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYR\
OLL][PAYJDFM][PERSONNEL IDENTIFICATION] ELSE\nIF([WHICH]=4) THEN RETURN_VALUE=[PAYROLL][PAYJDPM][PERSONNEL IDENTIFICATION] ELSE \nIF([WHICH]=5) THEN RETURN_VALUE=[PAYROLL][PAYJDAC][PERSONNEL IDENTIFICAT\
ION] ELSE \nIF([WHICH]=6) THEN RETURN_VALUE=[PAYROLL][PAYDPMS][PERSONNEL IDENTIFICATION] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][PERSONNEL IDENTIFICATION] ELSE\nIF([WHICH]=8) THEN RETURN\
_VALUE=[PAYROLL][PAYDFSM][PERSONNEL IDENTIFICATION] ELSE\nIF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][PERSONNEL IDENTIFICATION] ELSE\nRETURN_VALUE=\"\" FI FI FI FI FI FI FI FI FI");
	addvirtuallineADV(tmp,"PERSONNEL IDENTIFICATION",1,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(909+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][DEDUCTION DESCRIPTION IDENTIFICATION] ELSE\nIF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][DEDUCTION DESCRIPTION IDENTIFICATION] ELSE\nIF([WHICH]=3)\
 THEN RETURN_VALUE=[PAYROLL][PAYJDFM][DEDUCTION DESCRIPTION IDENTIFICATION] ELSE\nIF([WHICH]=4) THEN RETURN_VALUE=[PAYROLL][PAYJDPM][DEDUCTION DESCRIPTION IDENTIFICATION] ELSE \nIF([WHICH]=5) THEN RETUR\
N_VALUE=[PAYROLL][PAYJDAC][DEDUCTION DESCRIPTION IDENTIFICATION] ELSE \nIF([WHICH]=6) THEN RETURN_VALUE=[PAYROLL][PAYDPMS][DEDUCTION DESCRIPTION IDENTIFICATION] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PA\
YROLL][PAYDCSM][DEDUCTION DESCRIPTION IDENTIFICATION] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][DEDUCTION DESCRIPTION IDENTIFICATION] ELSE\nIF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDE\
DM][DEDUCTION DESCRIPTION IDENTIFICATION] ELSE\nRETURN_VALUE=\"\" FI FI FI FI FI FI FI FI FI");
	addvirtuallineADV(tmp,"DEDUCTION DESCRIPTION IDENTIFICATION",1,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(552+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][SOURCE USER VERIFIED] ELSE\nIF([WHICH]=2) THEN RETURN_VALUE=FALSE ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=FALSE ELSE\nIF([WHICH]=4) THEN RETURN_VALUE=[PAYR\
OLL][PAYJDPM][SOURCE USER VERIFIED] ELSE \nIF([WHICH]=5) THEN RETURN_VALUE=FALSE ELSE \nIF([WHICH]=6) THEN RETURN_VALUE=[PAYROLL][PAYDPMS][SOURCE USER VERIFIED] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=FALS\
E ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=FALSE ELSE\nIF([WHICH]=9) THEN RETURN_VALUE=FALSE ELSE\nRETURN_VALUE=FALSE FI FI FI FI FI FI FI FI FI");
	addvirtuallineADV(tmp,"SOURCE USER VERIFIED",10,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(518+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][SOURCE USER] ELSE\nIF([WHICH]=2) THEN RETURN_VALUE=\"\" ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=\"\" ELSE\nIF([WHICH]=4) THEN RETURN_VALUE=[PAYROLL][PAYJDPM][S\
OURCE USER] ELSE \nIF([WHICH]=5) THEN RETURN_VALUE=\"\" ELSE \nIF([WHICH]=6) THEN RETURN_VALUE=[PAYROLL][PAYDPMS][SOURCE USER] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=\"\" ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=\
\"\" ELSE\nIF([WHICH]=9) THEN RETURN_VALUE=\"\" ELSE\nRETURN_VALUE=\"\" FI FI FI FI FI FI FI FI FI");
	addvirtuallineADV(tmp,"SOURCE USER",1,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(471+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=0 ELSE\nIF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][CALENDAR YEAR] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=0 ELSE\nIF([WHICH]=4) THEN RETURN_VALUE=0 ELSE \nIF([WHICH]=5\
) THEN RETURN_VALUE=0 ELSE \nIF([WHICH]=6) THEN RETURN_VALUE=0 ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][CALENDAR YEAR] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=0 ELSE\nIF([WHICH]=9) THEN RETU\
RN_VALUE=0 ELSE\nRETURN_VALUE=0 FI FI FI FI FI FI FI FI FI");
	addvirtuallineADV(tmp,"CALENDAR YEAR",8,4,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(467+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=0 ELSE\nIF([WHICH]=2) THEN RETURN_VALUE=0 ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][FISCAL YEAR] ELSE\nIF([WHICH]=4) THEN RETURN_VALUE=0 ELSE \nIF([WHICH]=5) \
THEN RETURN_VALUE=0 ELSE \nIF([WHICH]=6) THEN RETURN_VALUE=0 ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=0 ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][FISCAL YEAR] ELSE\nIF([WHICH]=9) THEN RETURN_V\
ALUE=0 ELSE\nRETURN_VALUE=0 FI FI FI FI FI FI FI FI FI");
	addvirtuallineADV(tmp,"FISCAL YEAR",8,4,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(459+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=0 ELSE\nIF([WHICH]=2) THEN RETURN_VALUE=[CALENDAR YEAR] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[FISCAL YEAR] ELSE\nIF([WHICH]=4) THEN RETURN_VALUE=0 ELSE \nIF([WHICH]=5) THEN\
 RETURN_VALUE=0 ELSE \nIF([WHICH]=6) THEN RETURN_VALUE=0 ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[CALENDAR YEAR] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[FISCAL YEAR] ELSE\nIF([WHICH]=9) THEN RETURN_VALUE=0 E\
LSE\nRETURN_VALUE=0 FI FI FI FI FI FI FI FI FI");
	addvirtuallineADV(tmp,"YEAR ID",8,4,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(552+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][JOB NUMBER] ELSE\nIF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][JOB NUMBER] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][JOB NUMBER] EL\
SE\nIF([WHICH]=4) THEN RETURN_VALUE=[PAYROLL][PAYJDPM][JOB NUMBER] ELSE \nIF([WHICH]=5) THEN RETURN_VALUE=[PAYROLL][PAYJDAC][JOB NUMBER] ELSE \nIF([WHICH]=6) THEN RETURN_VALUE=0 ELSE\nIF([WHICH]=7) THEN R\
ETURN_VALUE=0 ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=0 ELSE\nIF([WHICH]=9) THEN RETURN_VALUE=0 ELSE\nRETURN_VALUE=0 FI FI FI FI FI FI FI FI FI");
	addvirtuallineADV(tmp,"JOB NUMBER",8,6,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(539+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][PAY IDENTIFICATION] ELSE\nIF([WHICH]=2) THEN RETURN_VALUE=\"\" ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=\"\" ELSE\nIF([WHICH]=4) THEN RETURN_VALUE=[PAYROLL][PAY\
JDPM][PAY IDENTIFICATION] ELSE \nIF([WHICH]=5) THEN RETURN_VALUE=\"\" ELSE \nIF([WHICH]=6) THEN RETURN_VALUE=[PAYROLL][PAYDPMS][PAY IDENTIFICATION] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=\"\" ELSE\nIF([WHICH]=\
8) THEN RETURN_VALUE=\"\" ELSE\nIF([WHICH]=9) THEN RETURN_VALUE=\"\" ELSE\nRETURN_VALUE=\"\" FI FI FI FI FI FI FI FI FI");
	addvirtuallineADV(tmp,"PAY IDENTIFICATION",1,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(167+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][ACCOUNT NUMBER] ELSE\nIF([WHICH]=5) THEN RETURN_VALUE=[PAYROLL][PAYJDAC][ACCOUNT NUMBER] \nELSE RETURN_VALUE=0 FI FI");
	addvirtuallineADV(tmp,"ACCOUNT NUMBER",8,6,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(166+1);
	sprintf(t,"IF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][PRE-YEAR GROSS] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][PRE-YEAR GROSS] ELSE\nRETURN_VALUE=0 FI FI");
	addvirtuallineADV(tmp,"PRE-YEAR GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(168+1);
	sprintf(t,"IF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][POST YEAR GROSS] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][POST YEAR GROSS] ELSE\nRETURN_VALUE=0 FI FI");
	addvirtuallineADV(tmp,"POST YEAR GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(168+1);
	sprintf(t,"IF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][PRE-YEAR AMOUNT] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][PRE-YEAR AMOUNT] ELSE\nRETURN_VALUE=0 FI FI");
	addvirtuallineADV(tmp,"PRE-YEAR AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(170+1);
	sprintf(t,"IF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][POST YEAR AMOUNT] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][POST YEAR AMOUNT] ELSE\nRETURN_VALUE=0 FI FI");
	addvirtuallineADV(tmp,"POST YEAR AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(317+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][JANUARY GROSS] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][JANUARY GROSS] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][JANUARY \
GROSS] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][JANUARY GROSS] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"JANUARY GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(321+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][JANUARY AMOUNT] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][JANUARY AMOUNT] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][JANUAR\
Y AMOUNT] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][JANUARY AMOUNT] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"JANUARY AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(321+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][FEBRUARY GROSS] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][FEBRUARY GROSS] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][FEBRUA\
RY GROSS] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][FEBRUARY GROSS] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"FEBRUARY GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(325+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][FEBRUARY AMOUNT] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][FEBRUARY AMOUNT] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][FEBR\
UARY AMOUNT] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][FEBRUARY AMOUNT] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"FEBRUARY AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(309+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][MARCH GROSS] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][MARCH GROSS] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][MARCH GROSS]\
 ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][MARCH GROSS] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"MARCH GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(313+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][MARCH AMOUNT] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][MARCH AMOUNT] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][MARCH AMOU\
NT] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][MARCH AMOUNT] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"MARCH AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(309+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][APRIL GROSS] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][APRIL GROSS] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][APRIL GROSS]\
 ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][APRIL GROSS] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"APRIL GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(313+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][APRIL AMOUNT] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][APRIL AMOUNT] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][APRIL AMOU\
NT] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][APRIL AMOUNT] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"APRIL AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(301+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][MAY GROSS] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][MAY GROSS] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][MAY GROSS] ELSE\n\
IF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][MAY GROSS] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"MAY GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(305+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][MAY AMOUNT] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][MAY AMOUNT] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][MAY AMOUNT] EL\
SE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][MAY AMOUNT] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"MAY AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(305+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][JUNE GROSS] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][JUNE GROSS] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][JUNE GROSS] EL\
SE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][JUNE GROSS] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"JUNE GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(309+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][JUNE AMOUNT] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][JUNE AMOUNT] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][JUNE AMOUNT]\
 ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][JUNE AMOUNT] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"JUNE AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(305+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][JULY GROSS] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][JULY GROSS] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][JULY GROSS] EL\
SE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][JULY GROSS] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"JULY GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(309+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][JULY AMOUNT] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][JULY AMOUNT] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][JULY AMOUNT]\
 ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][JULY AMOUNT] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"JULY AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(313+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][AUGUST GROSS] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][AUGUST GROSS] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][AUGUST GRO\
SS] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][AUGUST GROSS] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"AUGUST GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(317+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][AUGUST AMOUNT] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][AUGUST AMOUNT] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][AUGUST A\
MOUNT] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][AUGUST AMOUNT] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"AUGUST AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(325+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][SEPTEMBER GROSS] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][SEPTEMBER GROSS] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][SEPT\
EMBER GROSS] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][SEPTEMBER GROSS] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"SEPTEMBER GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(329+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][SEPTEMBER AMOUNT] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][SEPTEMBER AMOUNT] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][SE\
PTEMBER AMOUNT] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][SEPTEMBER AMOUNT] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"SEPTEMBER AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(317+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][OCTOBER GROSS] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][OCTOBER GROSS] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][OCTOBER \
GROSS] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][OCTOBER GROSS] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"OCTOBER GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(321+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][OCTOBER AMOUNT] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][OCTOBER AMOUNT] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][OCTOBE\
R AMOUNT] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][OCTOBER AMOUNT] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"OCTOBER AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(321+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][NOVEMBER GROSS] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][NOVEMBER GROSS] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][NOVEMB\
ER GROSS] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][NOVEMBER GROSS] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"NOVEMBER GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(325+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][NOVEMBER AMOUNT] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][NOVEMBER AMOUNT] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][NOVE\
MBER AMOUNT] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][NOVEMBER AMOUNT] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"NOVEMBER AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(321+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][DECEMBER GROSS] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][DECEMBER GROSS] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][DECEMB\
ER GROSS] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][DECEMBER GROSS] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"DECEMBER GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(325+1);
	sprintf(t,"IF([WHICH]=2) THEN RETURN_VALUE=[PAYROLL][PAYJDCM][DECEMBER AMOUNT] ELSE\nIF([WHICH]=3) THEN RETURN_VALUE=[PAYROLL][PAYJDFM][DECEMBER AMOUNT] ELSE\nIF([WHICH]=7) THEN RETURN_VALUE=[PAYROLL][PAYDCSM][DECE\
MBER AMOUNT] ELSE\nIF([WHICH]=8) THEN RETURN_VALUE=[PAYROLL][PAYDFSM][DECEMBER AMOUNT] ELSE \nRETURN_VALUE=0 FI FI FI FI");
	addvirtuallineADV(tmp,"DECEMBER AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(169+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][DEFINITION TYPE] ELSE\nIF([WHICH]=5) THEN RETURN_VALUE=[PAYROLL][PAYJDAC][DEFINITION TYPE] ELSE \nRETURN_VALUE=0 FI FI");
	addvirtuallineADV(tmp,"DEFINITION TYPE",7,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(105+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][PAYROLL FUND DEFINITION TYPE] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"PAYROLL FUND DEFINITION TYPE",7,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(90+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][LIABILITY] \nELSE RETURN_VALUE=FALSE FI");
	addvirtuallineADV(tmp,"LIABILITY",10,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(89+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][EXPENSED] \nELSE RETURN_VALUE=FALSE FI");
	addvirtuallineADV(tmp,"EXPENSED",10,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(369+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][AMOUNT] ELSE\nIF([WHICH]=4) THEN RETURN_VALUE=[PAYROLL][PAYJDPM][AMOUNT] ELSE\nIF([WHICH]=5) THEN RETURN_VALUE=[PAYROLL][PAYJDAC][AMOUNT] ELSE\nIF([WHICH\
]=6) THEN RETURN_VALUE=[PAYROLL][PAYDPMS][AMOUNT] ELSE \nIF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][ADJUSTMENT AMOUNT] \nELSE RETURN_VALUE=0 FI FI FI FI FI");
	addvirtuallineADV(tmp,"AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(167+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][ACCOUNT CODE] ELSE \nIF([WHICH]=5) THEN RETURN_VALUE=[PAYROLL][PAYJDAC][ACCOUNT CODE] ELSE \nRETURN_VALUE=\"\" FI FI");
	addvirtuallineADV(tmp,"ACCOUNT CODE",1,40,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(162+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][DEBIT CODE] ELSE \nIF([WHICH]=5) THEN RETURN_VALUE=[PAYROLL][PAYJDAC][DEBIT CODE] ELSE\nRETURN_VALUE=\"\" FI FI");
	addvirtuallineADV(tmp,"DEBIT CODE",1,40,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(164+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][CREDIT CODE] ELSE \nIF([WHICH]=5) THEN RETURN_VALUE=[PAYROLL][PAYJDAC][CREDIT CODE] ELSE\nRETURN_VALUE=\"\" FI FI");
	addvirtuallineADV(tmp,"CREDIT CODE",1,40,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(174+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][ENCUMBRANCE CODE] ELSE \nIF([WHICH]=5) THEN RETURN_VALUE=[PAYROLL][PAYJDAC][ENCUMBRANCE CODE] ELSE\nRETURN_VALUE=\"\" FI FI");
	addvirtuallineADV(tmp,"ENCUMBRANCE CODE",1,40,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(166+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][RESERVE CODE] ELSE \nIF([WHICH]=5) THEN RETURN_VALUE=[PAYROLL][PAYJDAC][RESERVE CODE] ELSE\nRETURN_VALUE=\"\" FI FI");
	addvirtuallineADV(tmp,"RESERVE CODE",1,40,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(89+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][CASH CODE] ELSE \nRETURN_VALUE=\"\" FI");
	addvirtuallineADV(tmp,"CASH CODE",1,40,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(94+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][LIABILITY CODE] ELSE \nRETURN_VALUE=\"\" FI");
	addvirtuallineADV(tmp,"LIABILITY CODE",1,40,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(88+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][DUE FROM] ELSE \nRETURN_VALUE=\"\" FI");
	addvirtuallineADV(tmp,"DUE FROM",1,40,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(98+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][USE PAYROLL FUND TYPE] ELSE \nRETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"USE PAYROLL FUND TYPE",7,2,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(92+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][DISTRIBUTED] ELSE \nRETURN_VALUE=FALSE FI");
	addvirtuallineADV(tmp,"DISTRIBUTED",10,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(94+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][DISTRIBUTED BY] ELSE \nRETURN_VALUE=\"\" FI");
	addvirtuallineADV(tmp,"DISTRIBUTED BY",1,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(96+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][DISTRIBUTED DATE] ELSE \nRETURN_VALUE=\"\" FI");
	addvirtuallineADV(tmp,"DISTRIBUTED DATE",16,8,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(96+1);
	sprintf(t,"IF([WHICH]=1) THEN RETURN_VALUE=[PAYROLL][PAYDTRN][DISTRIBUTED TIME] ELSE \nRETURN_VALUE=\"\" FI");
	addvirtuallineADV(tmp,"DISTRIBUTED TIME",17,8,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(148+1);
	sprintf(t,"IF([WHICH]=4) THEN RETURN_VALUe=[PAYROLL][PAYJDPM][GROSS] ELSE\nIF([WHICH]=6) THEN RETURN_VALUE=[PAYROLL][PAYDPMS][GROSS] ELSE\nRETURN_VALUE=0 FI FI");
	addvirtuallineADV(tmp,"GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(152+1);
	sprintf(t,"IF([WHICH]=4) THEN RETURN_VALUe=[PAYROLL][PAYJDPM][UPDATED] ELSE\nIF([WHICH]=6) THEN RETURN_VALUE=[PAYROLL][PAYDPMS][UPDATED] ELSE\nRETURN_VALUE=0 FI FI");
	addvirtuallineADV(tmp,"UPDATED",10,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(161+1);
	sprintf(t,"IF([WHICH]=4) THEN RETURN_VALUe=[PAYROLL][PAYJDPM][UPDATED BY] ELSE\nIF([WHICH]=6) THEN RETURN_VALUE=[PAYROLL][PAYDPMS][UPDATED BY] ELSE\nRETURN_VALUE=\"\" FI FI");
	addvirtuallineADV(tmp,"UPDATED BY",1,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(165+1);
	sprintf(t,"IF([WHICH]=4) THEN RETURN_VALUe=[PAYROLL][PAYJDPM][UPDATED DATE] ELSE\nIF([WHICH]=6) THEN RETURN_VALUE=[PAYROLL][PAYDPMS][UPDATED DATE] ELSE\nRETURN_VALUE=\"\" FI FI");
	addvirtuallineADV(tmp,"UPDATED DATE",16,8,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(165+1);
	sprintf(t,"IF([WHICH]=4) THEN RETURN_VALUe=[PAYROLL][PAYJDPM][UPDATED TIME] ELSE\nIF([WHICH]=6) THEN RETURN_VALUE=[PAYROLL][PAYDPMS][UPDATED TIME] ELSE\nRETURN_VALUE=\"\" FI FI");
	addvirtuallineADV(tmp,"UPDATED TIME",16,8,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(102+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][PRE-HISTORY FISCAL AMOUNT] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"PRE-HISTORY FISCAL AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(101+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][PRE-HISTORY FISCAL GROSS] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"PRE-HISTORY FISCAL GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(103+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][PRE-HISTORY CALENDAR GROSS] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"PRE-HISTORY CALENDAR GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(104+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][PRE-HISTORY CALENDAR AMOUNT] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"PRE-HISTORY CALENDAR AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(93+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][LIFE-TIME AMOUNT] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"LIFE-TIME AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(92+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][LIFE-TIME GROSS] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"LIFE-TIME GROSS",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(83+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][ACTIVE] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"ACTIVE",10,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(93+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][CHECKING ACCOUNT] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"CHECKING ACCOUNT",10,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(87+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][ACH ACTIVE] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"ACH ACTIVE",10,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(86+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][EXEMPTION] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"EXEMPTION",10,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(86+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][EXEMPTION] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"EXEMPTION",7,2,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(83+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][EXEMPT] \nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"EXEMPT",10,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(162+1);
	sprintf(t,"IF([WHICH]=9) THEN \n	IF([PAYROLL][PAYDEDM][ACTIVE]=TRUE) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][EXEMPTION AMOUNT] \n	ELSE RETURN_VALUE=0 FI\nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"EXEMPTION AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(163+1);
	sprintf(t,"IF([WHICH]=9) THEN \n	IF([PAYROLL][PAYDEDM][ACTIVE]=TRUE) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][SUPPLEMENT AMOUNT] \n	ELSE RETURN_VALUE=0 FI\nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"SUPPLEMENT AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(158+1);
	sprintf(t,"IF([WHICH]=9) THEN \n	IF([PAYROLL][PAYDEDM][ACTIVE]=TRUE) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][LIMIT AMOUNT] \n	ELSE RETURN_VALUE=0 FI\nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"LIMIT AMOUNT",2,15,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(156+1);
	sprintf(t,"IF([WHICH]=9) THEN \n	IF([PAYROLL][PAYDEDM][ACTIVE]=TRUE) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][PERCENTAGE] \n	ELSE RETURN_VALUE=0 FI\nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"PERCENTAGE",6,6,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(161+1);
	sprintf(t,"IF([WHICH]=9) THEN \n	IF([PAYROLL][PAYDEDM][ACTIVE]=TRUE) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][DISENCUMBER] \n	ELSE RETURN_VALUE=FALSE FI\nELSE RETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"DISENCUMBER",10,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(104+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][TRANSMITTAL ROUTE NUMBER] \nELSE RETURN_VALUE=\"\" FI");
	addvirtuallineADV(tmp,"TRANSMITTAL ROUTE NUMBER",1,9,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(99+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][BANK ACCOUNT NUMBER] \nELSE RETURN_VALUE=\"\" FI");
	addvirtuallineADV(tmp,"BANK ACCOUNT NUMBER",1,40,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(99+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][CREDIT UNION NUMBER] \nELSE RETURN_VALUE=\"\" FI");
	addvirtuallineADV(tmp,"CREDIT UNION NUMBER",1,40,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(89+1);
	sprintf(t,"IF([WHICH]=9) THEN RETURN_VALUE=[PAYROLL][PAYDEDM][HEALTH ID] \nELSE RETURN_VALUE=\"\" FI");
	addvirtuallineADV(tmp,"HEALTH ID",1,40,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(83+1);
	sprintf(t,"IF([WHICH]=5) THEN RETURN_VALUE=[PAYROLL][PAYJDAC][PRORATE] ELSE\nRETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"PRORATE",10,1,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(98+1);
	sprintf(t,"IF([WHICH]=4) THEN RETURN_VALUE=[PAYROLL][PAYJDPM][DIRECT DEPOSIT DATE] ELSE\nRETURN_VALUE=\"\" FI");
	addvirtuallineADV(tmp,"DIRECT DEPOSIT DATE",16,8,t,0,0);

	if(t!=NULL) Rfree(t);
	t=Rmalloc(97+1);
	sprintf(t,"IF([WHICH]=4) THEN RETURN_VALUE=[PAYROLL][PAYJDPM][DIRECT DEPOSIT NUMBER] ELSE\nRETURN_VALUE=0 FI");
	addvirtuallineADV(tmp,"DIRECT DEPOSIT NUMBER",8,8,t,0,0);

	if(t!=NULL) Rfree(t);




/*======================================================================
Creating Sorts, Control Breaks, and Accumulators
int xaddsortline(RDAreport *report,int type,char *name,int line,char *file)
type(s) - Sort Types	0 - Ascending
		1 - Ascending Lower
		2 - Ascending Upper
		3 - Descending
		4 - Descending Lower
		5 - Descending Upper

	int xaddcontrolline(RDAreport *report,char *name,short type,int line,char *file)
	type(s) - Control Types (Field Type: e.g. VARIABLETEXT, PLAINTEXT, SHORTV, ...)

	int xaddaccumline(RDAreport *report,char *name,int atype,char *accname,
		short field_type,int line,char *file)
	atype(s) - Accumulator Types
		0 - AVERAGE
		1 - FREQUENCY
		2 - FIRST OCCURRENCE
		3 - LAST OCCURRENCE
		4 - MAXIMUM
		5 - MINIMUM
		6 - PREVIOUS OCCURRENCE
		7 - SUMMATION

----------------------------------------------------------------------*/

	addsortline(tmp,0,"[PERSONNEL IDENTIFICATION]");
	addsortline(tmp,0,"[WHICH]");
	addsortline(tmp,0,"[JOB NUMBER]");
	addsortline(tmp,0,"[PAY IDENTIFICATION]");
	addsortline(tmp,0,"[YEAR ID]");
	addsortline(tmp,0,"[ACCOUNT NUMBER]");
	addsortline(tmp,0,"[DEDUCTION DESCRIPTION IDENTIFICATION]");
	addaccumline(tmp,"LAST ACCOUNT CODE",3,"[ACCOUNT CODE]",0);
	addaccumline(tmp,"LAST ACCOUNT NUMBER",3,"[ACCOUNT NUMBER]",0);
	addaccumline(tmp,"LAST ACH ACTIVE",3,"[ACH ACTIVE]",0);
	addaccumline(tmp,"LAST ACTIVE",3,"[ACTIVE]",0);
	addaccumline(tmp,"TOTAL AMOUNT",7,"[AMOUNT]",0);
	addaccumline(tmp,"TOTAL APRIL AMOUNT",7,"[APRIL AMOUNT]",0);
	addaccumline(tmp,"TOTAL APRIL GROSS",7,"[APRIL GROSS]",0);
	addaccumline(tmp,"TOTAL AUGUST AMOUNT",7,"[AUGUST AMOUNT]",0);
	addaccumline(tmp,"TOTAL AUGUST GROSS",7,"[AUGUST GROSS]",0);
	addaccumline(tmp,"LAST BANK ACCOUNT NUMBER",3,"[BANK ACCOUNT NUMBER]",0);
	addaccumline(tmp,"LAST CALENDAR YEAR",3,"[CALENDAR YEAR]",0);
	addaccumline(tmp,"LAST CASH CODE",3,"[CASH CODE]",0);
	addaccumline(tmp,"LAST CHECKING ACCOUNT",3,"[CHECKING ACCOUNT]",0);
	addaccumline(tmp,"LAST CREDIT CODE",3,"[CREDIT CODE]",0);
	addaccumline(tmp,"LAST CREDIT UNION NUMBER",3,"[CREDIT UNION NUMBER]",0);
	addaccumline(tmp,"LAST DEBIT CODE",3,"[DEBIT CODE]",0);
	addaccumline(tmp,"TOTAL DECEMBER AMOUNT",7,"[DECEMBER AMOUNT]",0);
	addaccumline(tmp,"TOTAL DECEMBER GROSS",7,"[DECEMBER GROSS]",0);
	addaccumline(tmp,"LAST DEDUCTION DESCRIPTION IDENTIFICATION",3,"[DEDUCTION DESCRIPTION IDENTIFICATION]",0);
	addaccumline(tmp,"LAST DEFINITION TYPE",3,"[DEFINITION TYPE]",0);
	addaccumline(tmp,"LAST DISENCUMBER",3,"[DISENCUMBER]",0);
	addaccumline(tmp,"LAST DISTRIBUTED BY",3,"[DISTRIBUTED BY]",0);
	addaccumline(tmp,"LAST DISTRIBUTED DATE",3,"[DISTRIBUTED DATE]",0);
	addaccumline(tmp,"LAST DISTRIBUTED TIME",3,"[DISTRIBUTED TIME]",0);
	addaccumline(tmp,"LAST DISTRIBUTED DISTRIBUTED",3,"[DISTRIBUTED]",0);
	addaccumline(tmp,"LAST DUE FROM",3,"[DUE FROM]",0);
	addaccumline(tmp,"LAST ENCUMBRANCE CODE",3,"[ENCUMBRANCE CODE]",0);
	addaccumline(tmp,"LAST EXEMPTION AMOUNT",3,"[EXEMPTION AMOUNT]",0);
	addaccumline(tmp,"LAST EXEMPTION",3,"[EXEMPTION]",0);
	addaccumline(tmp,"LAST EXEMPT",3,"[EXEMPT]",0);
	addaccumline(tmp,"LAST PRORATE",3,"[PRORATE]",0);
	addaccumline(tmp,"LAST EXPENSED",3,"[EXPENSED]",0);
	addaccumline(tmp,"TOTAL FEBRUARY AMOUNT",7,"[FEBRUARY AMOUNT]",0);
	addaccumline(tmp,"TOTAL FEBRUARY GROSS",7,"[FEBRUARY GROSS]",0);
	addaccumline(tmp,"LAST FISCAL YEAR",3,"[FISCAL YEAR]",0);
	addaccumline(tmp,"TOTAL GROSS",7,"[GROSS]",0);
	addaccumline(tmp,"LAST HEALTH ID",3,"[HEALTH ID]",0);
	addaccumline(tmp,"TOTAL JANUARY AMOUNT",7,"[JANUARY AMOUNT]",0);
	addaccumline(tmp,"TOTAL JANUARY GROSS",7,"[JANUARY GROSS]",0);
	addaccumline(tmp,"LAST JOB NUMBER",3,"[JOB NUMBER]",0);
	addaccumline(tmp,"TOTAL JULY AMOUNT",7,"[JULY AMOUNT]",0);
	addaccumline(tmp,"TOTAL JULY GROSS",7,"[JULY GROSS]",0);
	addaccumline(tmp,"TOTAL JUNE AMOUNT",7,"[JUNE AMOUNT]",0);
	addaccumline(tmp,"TOTAL JUNE GROSS",7,"[JUNE GROSS]",0);
	addaccumline(tmp,"LAST LIABILITY CODE",3,"[LIABILITY CODE]",0);
	addaccumline(tmp,"LAST LIABILITY",3,"[LIABILITY]",0);
	addaccumline(tmp,"TOTAL LIFE-TIME AMOUNT",7,"[LIFE-TIME AMOUNT]",0);
	addaccumline(tmp,"TOTAL LIFE-TIME GROSS",7,"[LIFE-TIME GROSS]",0);
	addaccumline(tmp,"TOTAL LIMIT AMOUNT",7,"[LIMIT AMOUNT]",0);
	addaccumline(tmp,"TOTAL MARCH AMOUNT",7,"[MARCH AMOUNT]",0);
	addaccumline(tmp,"TOTAL MARCH GROSS",7,"[MARCH GROSS]",0);
	addaccumline(tmp,"TOTAL MAY AMOUNT",7,"[MAY AMOUNT]",0);
	addaccumline(tmp,"TOTAL MAY GROSS",7,"[MAY GROSS]",0);
	addaccumline(tmp,"TOTAL NOVEMBER AMOUNT",7,"[NOVEMBER AMOUNT]",0);
	addaccumline(tmp,"TOTAL NOVEMBER GROSS",7,"[NOVEMBER GROSS]",0);
	addaccumline(tmp,"TOTAL OCTOBER AMOUNT",7,"[OCTOBER AMOUNT]",0);
	addaccumline(tmp,"TOTAL OCTOBER GROSS",7,"[OCTOBER GROSS]",0);
	addaccumline(tmp,"LAST PAY IDENTIFICATION",3,"[PAY IDENTIFICATION]",0);
	addaccumline(tmp,"LAST PAYROLL FUND DEFINITION TYPE",3,"[PAYROLL FUND DEFINITION TYPE]",0);
	addaccumline(tmp,"TOTAL PERCENTAGE",3,"[PERCENTAGE]",0);
	addaccumline(tmp,"LAST PERSONNEL IDENTIFICATION",3,"[PERSONNEL IDENTIFICATION]",0);
	addaccumline(tmp,"TOTAL POST YEAR AMOUNT",7,"[POST YEAR AMOUNT]",0);
	addaccumline(tmp,"TOTAL POST YEAR GROSS",7,"[POST YEAR GROSS]",0);
	addaccumline(tmp,"TOTAL PRE-HISTORY CALENDAR AMOUNT",7,"[PRE-HISTORY CALENDAR AMOUNT]",0);
	addaccumline(tmp,"TOTAL PRE-HISTORY CALENDAR GROSS",7,"[PRE-HISTORY CALENDAR GROSS]",0);
	addaccumline(tmp,"TOTAL PRE-HISTORY FISCAL AMOUNT",7,"[PRE-HISTORY FISCAL AMOUNT]",0);
	addaccumline(tmp,"TOTAL PRE-HISTORY FISCAL GROSS",7,"[PRE-HISTORY FISCAL GROSS]",0);
	addaccumline(tmp,"TOTAL PRE-YEAR AMOUNT",7,"[PRE-YEAR AMOUNT]",0);
	addaccumline(tmp,"TOTAL PRE-YEAR GROSS",7,"[PRE-YEAR GROSS]",0);
	addaccumline(tmp,"LAST RESERVE CODE",3,"[RESERVE CODE]",0);
	addaccumline(tmp,"TOTAL SEPTEMBER AMOUNT",7,"[SEPTEMBER AMOUNT]",0);
	addaccumline(tmp,"TOTAL SEPTEMBER GROSS",7,"[SEPTEMBER GROSS]",0);
	addaccumline(tmp,"LAST SOURCE USER VERIFIED",3,"[SOURCE USER VERIFIED]",0);
	addaccumline(tmp,"LAST SOURCE USER",3,"[SOURCE USER]",0);
	addaccumline(tmp,"TOTAL SUPPLEMENT AMOUNT",3,"[SUPPLEMENT AMOUNT]",0);
	addaccumline(tmp,"LAST TRANSMITTAL ROUTE NUMBER",3,"[TRANSMITTAL ROUTE NUMBER]",0);
	addaccumline(tmp,"LAST UPDATED BY",3,"[UPDATED BY]",0);
	addaccumline(tmp,"LAST UPDATED DATE",3,"[UPDATED DATE]",0);
	addaccumline(tmp,"LAST UPDATED TIME",3,"[UPDATED TIME]",0);
	addaccumline(tmp,"LAST UPDATED",3,"[UPDATED]",0);
	addaccumline(tmp,"LAST USE PAYROLL FUND TYPE",3,"[USE PAYROLL FUND TYPE]",0);
	addaccumline(tmp,"LAST WHICH",3,"[WHICH]",0);
	addaccumline(tmp,"LAST YEAR ID",3,"[YEAR ID]",0);
	addaccumline(tmp,"LAST DIRECT DEPOSIT DATE",3,"[DIRECT DEPOSIT DATE]",0);
	addaccumline(tmp,"LAST DIRECT DEPOSIT NUMBER",3,"[DIRECT DEPOSIT NUMBER]",0);
	addcontrolline(tmp,"[PERSONNEL IDENTIFICATION]",0);
	addcontrolline(tmp,"[WHICH]",0);
	addcontrolline(tmp,"[JOB NUMBER]",0);
	addcontrolline(tmp,"[PAY IDENTIFICATION]",0);
	addcontrolline(tmp,"[YEAR ID]",0);
	addcontrolline(tmp,"[ACCOUNT NUMBER]",0);
	addcontrolline(tmp,"[DEDUCTION DESCRIPTION IDENTIFICATION]",0);




/*----------------------------------------------------------------------
Creating Image Lines
int xaddimageline(RDAreport *report,char *breakname,char *line,
	short test_expression,char *expression,
int numpvals,RDApval *pvals,int linex,char *file)

int xaddimagepval(RDAimage *image,short symbol_type,char *name,int type,
	char *field_name,int line,char *file)
Symbol Type(s)
	0 - FIELD / VIRTUAL FIELD / ACCUMULATOR
		OR Copy Variable to Field        for DATAFILE Type Report
	1 - DEVICE CONTROL VARIABLE
		OR Evaluate Expression           for DATAFILE Type Report
Type(s)
	0 - Value from List of Available Variable Names
		(May Already be Computed)
	1 - Value Entered as an Expression
		(Must Evaluate Expression)

----------------------------------------------------------------------*/

	addimageline(tmp,"REPORT HEADER","OPEN [PAYROLL][PAYDTRN]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT HEADER","OPEN [PAYROLL][PAYJDCM]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT HEADER","OPEN [PAYROLL][PAYJDFM]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT HEADER","OPEN [PAYROLL][PAYJDPM]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT HEADER","OPEN [PAYROLL][PAYJDAC]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT HEADER","OPEN [PAYROLL][PAYDPMS]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT HEADER","OPEN [PAYROLL][PAYDCSM]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT HEADER","OPEN [PAYROLL][PAYDFSM]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT HEADER","OPEN [PAYROLL][PAYDEDM]",FALSE,NULL,0,pval);


	pval=Rmalloc(6*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[ACCOUNT NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][ACCOUNT NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DEDUCTION DESCRIPTION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[JOB NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][JOB NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PAY IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][PAY IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("TRUE");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][DELETEFLAG]");
	addimageline(tmp,"DETAIL LINES","WRITE [PAYROLL][PAYDTRN]",TRUE,"([WHICH]=1)",6,pval);
	free_pvals(pval,6);


	pval=Rmalloc(23*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("NEXT TRANSACTION NO");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][ACCOUNT NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[COMBINATION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[JOB NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][JOB NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PAY IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][PAY IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("FALSE");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][DELETEFLAG]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DISTRIBUTED BY]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][DISTRIBUTED BY]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DISTRIBUTED DATE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][DISTRIBUTED DATE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DISTRIBUTED TIME]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][DISTRIBUTED TIME]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DISTRIBUTED]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][DISTRIBUTED]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DUE FROM]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][DUE FROM]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[ENCUMBRANCE CODE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][ENCUMBRANCE CODE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[EXPENSED]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][EXPENSED]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[JOB NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][JOB NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LIABILITY CODE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][LIABILITY CODE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LIABILITY]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][LIABILITY]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PAY IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][PAY IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PAYROLL FUND DEFINITION TYPE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][PAYROLL FUND DEFINITION TYPE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[RESERVE CODE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][RESERVE CODE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[SOURCE USER VERIFIED]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][SOURCE USER VERIFIED]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[SOURCE USER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][SOURCE USER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[USE PAYROLL FUND TYPE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDTRN][USE PAYROLL FUND TYPE]");
	addimageline(tmp,"DETAIL LINES","WRITE [PAYROLL][PAYDTRN]",TRUE,"([WHICH]=1)",23,pval);
	free_pvals(pval,23);


	pval=Rmalloc(5*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[CALENDAR YEAR]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][CALENDAR YEAR]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DEDUCTION DESCRIPTION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[JOB NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][JOB NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("TRUE");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][DELETEFLAG]");
	addimageline(tmp,"DETAIL LINES","WRITE [PAYROLL][PAYJDCM]",TRUE,"([WHICH]=2)",5,pval);
	free_pvals(pval,5);


	pval=Rmalloc(5*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DEDUCTION DESCRIPTION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[FISCAL YEAR]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][FISCAL YEAR]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[JOB NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][JOB NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("TRUE");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][DELETEFLAG]");
	addimageline(tmp,"DETAIL LINES","WRITE [PAYROLL][PAYJDFM]",TRUE,"([WHICH]=3)",5,pval);
	free_pvals(pval,5);


	pval=Rmalloc(5*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DEDUCTION DESCRIPTION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("TRUE");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][DELETEFLAG]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[JOB NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][JOB NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PAY IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][PAY IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][PERSONNEL IDENTIFICATION]");
	addimageline(tmp,"DETAIL LINES","WRITE [PAYROLL][PAYJDPM]",TRUE,"([WHICH]=4)",5,pval);
	free_pvals(pval,5);


	pval=Rmalloc(5*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[ACCOUNT NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][ACCOUNT NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DEDUCTION DESCRIPTION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[JOB NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][JOB NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("TRUE");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][DELETEFLAG]");
	addimageline(tmp,"DETAIL LINES","WRITE [PAYROLL][PAYJDAC]",TRUE,"([WHICH]=5)",5,pval);
	free_pvals(pval,5);


	pval=Rmalloc(4*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DEDUCTION DESCRIPTION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PAY IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][PAY IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("TRUE");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][DELETEFLAG]");
	addimageline(tmp,"DETAIL LINES","WRITE [PAYROLL][PAYDPMS]",TRUE,"([WHICH]=6)",4,pval);
	free_pvals(pval,4);


	pval=Rmalloc(4*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[CALENDAR YEAR]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][CALENDAR YEAR]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DEDUCTION DESCRIPTION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("TRUE");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][DELETEFLAG]");
	addimageline(tmp,"DETAIL LINES","WRITE [PAYROLL][PAYDCSM]",TRUE,"([WHICH]=7)",4,pval);
	free_pvals(pval,4);


	pval=Rmalloc(4*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DEDUCTION DESCRIPTION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[FISCAL YEAR]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][FISCAL YEAR]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("TRUE");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][DELETEFLAG]");
	addimageline(tmp,"DETAIL LINES","WRITE [PAYROLL][PAYDFSM]",TRUE,"([WHICH]=8)",4,pval);
	free_pvals(pval,4);


	pval=Rmalloc(3*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[DEDUCTION DESCRIPTION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("TRUE");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][DELETEFLAG]");
	addimageline(tmp,"DETAIL LINES","WRITE [PAYROLL][PAYDEDM]",TRUE,"([WHICH]=9)",3,pval);
	free_pvals(pval,3);


	pval=Rmalloc(14*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST ACCOUNT CODE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][ACCOUNT CODE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("NEXT TRANSACTION NO");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][ACCOUNT NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST CREDIT CODE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][CREDIT CODE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST DEBIT CODE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][DEBIT CODE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[COMBINATION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST DEFINITION TYPE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][DEFINITION TYPE]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("FALSE");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][DELETEFLAG]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST ENCUMBRANCE CODE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][ENCUMBRANCE CODE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST JOB NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][JOB NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL PERCENTAGE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][PERCENTAGE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST PRORATE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][PRORATE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST RESERVE CODE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDAC][RESERVE CODE]");
	addimageline(tmp,"[ACCOUNT NUMBER] FOOTER","WRITE [PAYROLL][PAYJDAC]",TRUE,"([LAST WHICH]=5)",14,pval);
	free_pvals(pval,14);


	pval=Rmalloc(14*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[COMBINATION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("FALSE");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][DELETEFLAG]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST DIRECT DEPOSIT DATE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][DIRECT DEPOSIT DATE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST DIRECT DEPOSIT NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][DIRECT DEPOSIT NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST JOB NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][JOB NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST PAY IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][PAY IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST SOURCE USER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][SOURCE USER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST UPDATED BY]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][UPDATED BY]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST UPDATED DATE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][UPDATED DATE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST UPDATED TIME]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][UPDATED TIME]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST UPDATED]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDPM][UPDATED]");
	addimageline(tmp,"[PAY IDENTIFICATION] FOOTER","WRITE [PAYROLL][PAYJDPM]",TRUE,"([LAST WHICH]=4)",14,pval);
	free_pvals(pval,14);


	pval=Rmalloc(12*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[COMBINATION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("FALSE");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][DELETEFLAG]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST PAY IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][PAY IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST SOURCE USER VERIFIED]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][SOURCE USER VERIFIED]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST SOURCE USER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][SOURCE USER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST UPDATED BY]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][UPDATED BY]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST UPDATED DATE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][UPDATED DATE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST UPDATED TIME]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][UPDATED TIME]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST UPDATED]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDPMS][UPDATED]");
	addimageline(tmp,"[PAY IDENTIFICATION] FOOTER","WRITE [PAYROLL][PAYDPMS]",TRUE,"([LAST WHICH]=6)",12,pval);
	free_pvals(pval,12);


	pval=Rmalloc(29*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST CALENDAR YEAR]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][CALENDAR YEAR]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[COMBINATION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST JOB NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][JOB NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("FALSE");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][DELETEFLAG]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL APRIL AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][APRIL AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL APRIL GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][APRIL GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL AUGUST AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][AUGUST AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL AUGUST GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][AUGUST GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL DECEMBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][DECEMBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL DECEMBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][DECEMBER GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL FEBRUARY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][FEBRUARY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL FEBRUARY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][FEBRUARY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JANUARY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][JANUARY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JANUARY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][JANUARY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JULY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][JULY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JULY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][JULY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JUNE AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][JUNE AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JUNE GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][JUNE GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MARCH AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][MARCH AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MARCH GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][MARCH GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MAY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][MAY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MAY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][MAY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL NOVEMBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][NOVEMBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL NOVEMBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][NOVEMBER GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL OCTOBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][OCTOBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL OCTOBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][OCTOBER GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL SEPTEMBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][SEPTEMBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL SEPTEMBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDCM][SEPTEMBER GROSS]");
	addimageline(tmp,"[YEAR ID] FOOTER","WRITE [PAYROLL][PAYJDCM]",TRUE,"([LAST WHICH]=2)",29,pval);
	free_pvals(pval,29);


	pval=Rmalloc(29*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST FISCAL YEAR]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][FISCAL YEAR]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[COMBINATION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST JOB NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][JOB NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("FALSE");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][DELETEFLAG]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL APRIL AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][APRIL AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL APRIL GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][APRIL GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL AUGUST AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][AUGUST AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL AUGUST GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][AUGUST GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL DECEMBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][DECEMBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL DECEMBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][DECEMBER GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL FEBRUARY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][FEBRUARY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL FEBRUARY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][FEBRUARY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JANUARY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][JANUARY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JANUARY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][JANUARY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JULY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][JULY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JULY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][JULY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JUNE AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][JUNE AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JUNE GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][JUNE GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MARCH AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][MARCH AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MARCH GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][MARCH GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MAY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][MAY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MAY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][MAY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL NOVEMBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][NOVEMBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL NOVEMBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][NOVEMBER GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL OCTOBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][OCTOBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL OCTOBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][OCTOBER GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL SEPTEMBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][SEPTEMBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL SEPTEMBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYJDFM][SEPTEMBER GROSS]");
	addimageline(tmp,"[YEAR ID] FOOTER","WRITE [PAYROLL][PAYJDFM]",TRUE,"([LAST WHICH]=3)",29,pval);
	free_pvals(pval,29);


	pval=Rmalloc(28*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST CALENDAR YEAR]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][CALENDAR YEAR]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[COMBINATION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("FALSE");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][DELETEFLAG]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL APRIL AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][APRIL AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL APRIL GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][APRIL GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL AUGUST AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][AUGUST AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL AUGUST GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][AUGUST GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL DECEMBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][DECEMBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL DECEMBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][DECEMBER GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL FEBRUARY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][FEBRUARY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL FEBRUARY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][FEBRUARY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JANUARY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][JANUARY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JANUARY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][JANUARY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JULY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][JULY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JULY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][JULY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JUNE AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][JUNE AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JUNE GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][JUNE GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MARCH AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][MARCH AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MARCH GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][MARCH GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MAY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][MAY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MAY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][MAY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL NOVEMBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][NOVEMBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL NOVEMBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][NOVEMBER GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL OCTOBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][OCTOBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL OCTOBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][OCTOBER GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL SEPTEMBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][SEPTEMBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL SEPTEMBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDCSM][SEPTEMBER GROSS]");
	addimageline(tmp,"[YEAR ID] FOOTER","WRITE [PAYROLL][PAYDCSM]",TRUE,"([LAST WHICH]=7)",28,pval);
	free_pvals(pval,28);


	pval=Rmalloc(28*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST FISCAL YEAR]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][FISCAL YEAR]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[COMBINATION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("FALSE");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][DELETEFLAG]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL APRIL AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][APRIL AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL APRIL GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][APRIL GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL AUGUST AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][AUGUST AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL AUGUST GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][AUGUST GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL DECEMBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][DECEMBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL DECEMBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][DECEMBER GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL FEBRUARY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][FEBRUARY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL FEBRUARY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][FEBRUARY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JANUARY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][JANUARY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JANUARY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][JANUARY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JULY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][JULY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JULY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][JULY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JUNE AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][JUNE AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL JUNE GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][JUNE GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MARCH AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][MARCH AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MARCH GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][MARCH GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MAY AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][MAY AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL MAY GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][MAY GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL NOVEMBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][NOVEMBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL NOVEMBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][NOVEMBER GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL OCTOBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][OCTOBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL OCTOBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][OCTOBER GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL SEPTEMBER AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][SEPTEMBER AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL SEPTEMBER GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDFSM][SEPTEMBER GROSS]");
	addimageline(tmp,"[YEAR ID] FOOTER","WRITE [PAYROLL][PAYDFSM]",TRUE,"([LAST WHICH]=8)",28,pval);
	free_pvals(pval,28);


	pval=Rmalloc(24*sizeof(RDApval));
	pvals=pval;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST ACH ACTIVE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][ACH ACTIVE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST ACTIVE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][ACTIVE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][ADJUSTMENT AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST BANK ACCOUNT NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][BANK ACCOUNT NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST CHECKING ACCOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][CHECKING ACCOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST CREDIT UNION NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][CREDIT UNION POLICY NUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[COMBINATION IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][DEDUCTION DESCRIPTION IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=1;
	pvals->type=0;
	pvals->name=stralloc("FALSE");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][DELETEFLAG]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST DISENCUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][DISENCUMBER]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST EXEMPTION AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][EXEMPTION AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST EXEMPTION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][EXEMPTION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST EXEMPT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][EXEMPT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST HEALTH ID]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][HEALTH ID]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL LIFE-TIME AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][LIFE-TIME AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL LIFE-TIME GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][LIFE-TIME GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL LIMIT AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][LIMIT AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL PERCENTAGE]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][PERCENTAGE]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST PERSONNEL IDENTIFICATION]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][PERSONNEL IDENTIFICATION]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL PRE-HISTORY CALENDAR AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][PRE-HISTORY CALENDAR AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL PRE-HISTORY CALENDAR GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][PRE-HISTORY CALENDAR GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL PRE-HISTORY FISCAL AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][PRE-HISTORY FISCAL AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL PRE-HISTORY FISCAL GROSS]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][PRE-HISTORY FISCAL GROSS]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[TOTAL SUPPLEMENT AMOUNT]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][SUPPLEMENT AMOUNT]");
	++pvals;
	pvals->symbol_type=0;
	pvals->type=0;
	pvals->name=stralloc("[LAST TRANSMITTAL ROUTE NUMBER]");
	pvals->fieldname=stralloc("[PAYROLL][PAYDEDM][TRANSMITTAL ROUTE NUMBER]");
	addimageline(tmp,"[WHICH] FOOTER","WRITE [PAYROLL][PAYDEDM]",TRUE,"([LAST WHICH]=9)",24,pval);
	free_pvals(pval,24);


	addimageline(tmp,"REPORT FOOTER","CLOSE [PAYROLL][PAYDTRN]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT FOOTER","CLOSE [PAYROLL][PAYJDCM]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT FOOTER","CLOSE [PAYROLL][PAYJDFM]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT FOOTER","CLOSE [PAYROLL][PAYJDPM]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT FOOTER","CLOSE [PAYROLL][PAYJDAC]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT FOOTER","CLOSE [PAYROLL][PAYDPMS]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT FOOTER","CLOSE [PAYROLL][PAYDCSM]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT FOOTER","CLOSE [PAYROLL][PAYDFSM]",FALSE,NULL,0,pval);


	addimageline(tmp,"REPORT FOOTER","CLOSE [PAYROLL][PAYDEDM]",FALSE,NULL,0,pval);






	if(tmp!=NULL)
	{
		if(WRTRDAreport(module,tmp))
		{
			ERRORDIALOG("Cannot Write Report","Error in permissions, user cannot write the report definition.  Check your permissions, and retry.  Call your installer.",NULL,FALSE);
			prterr("Cannont Write Report definition for Report [%s].  Error in permissions, user cannot write the report definition.",rptname);
		} else {
			COMBDED_RANGE_SCREEN();
		}
		FreeRDAreport(tmp);
	}
	if(rptname!=NULL) Rfree(rptname);
}
/* PAYROLL's - Make (COMBDED RANGE SCREEN) Screen */
static void COMBDED_RANGE_SCREEN()
{
	RDAscrn *scrn=NULL;
	char *defdir=NULL;

/*============================================================================
Adding Screen Widgets
void xaddwdgt(RDAscrn *screen,short type,char *resource_name,char *label,
	char *pixmap,char *ywlabel,short rows,short cols,int rtype,
	char *expression,char *editable_expression,char *sensitive_expression,
	char *transversal_expression,int line,char *file)

#define ADVaddwdgt(a,b,c,d,p,w,e,f,g,h,i,j,l)   xaddwdgt(a,b,c,d,p,w,e,f,g,h,i,j,l,__LINE__,__FILE__)

RDAwdgts types
{
	0	-	Standard Resource
	1	-	New Line
	2	-	End Line
	3	-	New Box
	4	-	End Box
	5	-	Label
	6	-	Button
	7	-	Scrolled List
	8	-	Scrolled Text
	9	-	Toggle Button (Boolean)
	10	-	Frame
	11	-	Seperator
	12	-	New Scrolled Window
	13	-	End Scrolled Window
	14	-	Optional Screen
	15	-	Custom Type (Same as Resource Type, except for rtype.)
	16	-	Expenditure Type (Same as Resource Type, except for rtype.)
	17	-	Revenue Type (Same as Resource Type, except for rtype.)
	18	-	Balance Sheet Type (Same as Resource Type, except for rtype.)
	19	-	Beginning Balance Type (Same as Resource Type, except for rtype.)

New Widgets
	??	-	New Menu Bar (Start Menu Bar)
	??	-	End Menu Bar (End Menu Bar)
	??	-	Menu Control (Menu Control Option)
	??	-	Needs a Modifying Character????????
	??	-	Menu Button (Buttons available to the menu)
	??	-	Needs a Modifying Character????????
}
Resource Types
	5-Label	0	-	Text Label
		1	-	Pixmap Label

	6-Button	0	-	Push Button
		1	-	Arrow Button Right
		2	-	Arrow Button Left
		3	-	Arrow Button Up
		4	-	Arrow Button Down
		5	-	Pixmap

	8-Scrolled Text	0	-	WordWap & Horizontal SB (Side Bar)
		1	-	Horizontal SB & No WordWrap

	9-Toggle Button	0	-	Text Label
		1	-	Pixmap Label

	10-Frame	0	-	Shadow In
		1	-	Shadow Out
		2	-	Shadow Etched In
		3	-	Shadow Etched Out

	11-Seperator	0	-	Horizontal Single Line
		1	-	Horizontal Double Line
		2	-	Horizontal Single Dashed
		3	-	Horizontal Double Dashed
		4	-	Vertical Single Line
		5	-	Vertical Double Line
		6	-	Vertical Single Dashed
		7	-	Vertical Double Dashed

		14-OptionalScrn	0	-	Push Button
		1	-	Arrow Button Right
		2	-	Arrow Button Left
		3	-	Arrow Button Up
		4	-	Arrow Button Down
		5	-	Pixmap

============================================================================*/


	scrn=RDAscrnNEW("PAYROLL","COMBDED RANGE SCREEN");
	if(scrn!=NULL)
	{
		ADVaddwdgt(scrn,1,"","","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,5,"","Combination Deduction Type:","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,0,"COMBINATION TYPE","Combination Type","","",0,15,0,"","","","");
		ADVaddwdgt(scrn,5,"","New Deduction ID:","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,0,"COMBINATION IDENTIFICATION","Combination Identification","","",0,15,0,"","","","");
		ADVaddwdgt(scrn,2,"","","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,1,"","","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,3,"","","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,1,"","","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,6,"RUN REPORT","Select","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,6,"QUIT","Cancel","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,6,"HELP","Help","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,6,"DEFAULTS","Save Defaults","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,2,"","","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,4,"","","","",0,0,0,"","","","");
		ADVaddwdgt(scrn,2,"","","","",0,0,0,"","","","");

		defdir=Rmalloc(RDAstrlen(CURRENTDIRECTORY)+RDAstrlen(module)+12);
		sprintf(defdir,"%s/rda/%s.SCN",CURRENTDIRECTORY,module);
		if(writescrnbin(defdir,scrn))
		{
			ERRORDIALOG("Cannot Save Screen","This screen may not be saved to the specified library.  Check your permissions and re-try.  Call your installer for further instructions.",NULL,FALSE);
		}
		if(defdir!=NULL) Rfree(defdir);
		if(scrn!=NULL) free_scrn(scrn);
	}
}
